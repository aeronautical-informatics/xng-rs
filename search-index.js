var searchIndex = JSON.parse('{\
"xng_rs":{"doc":"A Rust wrapper for the XNG API","i":[[0,"prelude","xng_rs","The prelude is a collection of all traits and commonly …",null,null],[3,"CStr","xng_rs::prelude","Representation of a borrowed C string.",null,null],[3,"Duration","","A <code>Duration</code> type to represent a span of time, typically …",null,null],[0,"partition","xng_rs","Functions related to the partitionining system",null,null],[6,"PartitionId","xng_rs::partition","One partitions id type",null,null],[5,"my_id","","Get the current partitions ID",null,[[],[["partitionid",6],["result",4],["xngerror",4]]]],[5,"id","","Get the other partitions ID",null,[[["cstr",3]],[["partitionid",6],["result",4],["xngerror",4]]]],[5,"halt","","Halt a partition",null,[[["partitionid",6]],[["result",4],["xngerror",4]]]],[0,"port","xng_rs","Ports allow communication between the partitions in XNG",null,null],[6,"SamplingPortId","xng_rs::port","The type of a sampling ports id",null,null],[3,"SamplingReceiver","","Keeps the last (if any) sent value",null,null],[3,"SamplingSender","","Allows to store one message in the port",null,null],[3,"SamplingPortStatus","","The current status of a Sampling Port",null,null],[12,"refresh_period","","Refresh period as defined via XCF",0,null],[12,"last_message_ts","","Timestamp of last message - None if no message ever was …",0,null],[12,"last_message_size","","Size in bytes of the last message which was received",0,null],[12,"last_message_valid","","Whether the last message was valid",0,null],[0,"time","xng_rs","This module adds some notion of time",null,null],[3,"Duration","xng_rs::time","A <code>Duration</code> type to represent a span of time, typically …",null,null],[5,"since_boot","","Get the duration of time since the boot of the system/",null,[[],[["duration",3],["result",4],["xngerror",4]]]],[4,"TimeError","","Error during operations with time",null,null],[13,"InfiniteTime","","An instant has the value infinity. This should not happen …",1,null],[8,"DurationFromInt","","Extension trait that adds convenience methods to the <code>i64</code> …",null,null],[10,"secs","","Duration in secs",2,[[],["duration",3]]],[10,"ms","","Duration in milliseconds",2,[[],["duration",3]]],[10,"us","","Duration in microseconds",2,[[],["duration",3]]],[0,"vcpu","xng_rs","This module contains functions for the virtual CPU",null,null],[6,"VCpuId","xng_rs::vcpu","Type representing the id of a virtual CPU",null,null],[5,"finish_slot","","Instruct the callers virtual CPU to yield its computation …",null,[[]]],[4,"XngError","xng_rs","The XNG error type",null,null],[13,"NoAction","","System’s operational status unaffected by request.",3,null],[13,"NotAvailable","","The request cannot be performed immediately.",3,null],[13,"InvalidParam","","Parameter specified in request invalid.",3,null],[13,"InvalidConfig","","Parameter specified in request incompatible with current …",3,null],[13,"InvalidMode","","Request incompatible with mode of operation.",3,null],[13,"UnknownReturnCode","","A function returned a return code which we do not know",3,null],[13,"BufTooBig","","The buffer is too big",3,null],[12,"buf_size","xng_rs::XngError","The size of the buffer",4,null],[12,"max_allowed","","The maximum allowed size",4,null],[13,"BufTooSmall","xng_rs","The buffer is too small",3,null],[12,"buf_size","xng_rs::XngError","The size of the buffer",5,null],[12,"min_required","","The maximum allowed size",5,null],[13,"TimeError","xng_rs","A time error occured",3,null],[3,"XngErrorTrace","","An Xng Error with trace information",null,null],[14,"to_traceable_error","","Convert a <code>xReturnCode_t</code> to an <code>Result<(), XngError></code>",null,null],[14,"cstr","","Create a NULL terminated string in C representation",null,null],[11,"borrow","xng_rs::prelude","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","xng_rs::time","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","xng_rs::port","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","xng_rs::time","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","xng_rs","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"add","xng_rs::time","",7,[[["duration",3]],["duration",3]]],[11,"div_assign","","",7,[[["u32",15]]]],[11,"add_assign","","",7,[[["duration",3]]]],[11,"cmp","","",7,[[["duration",3]],["ordering",4]]],[11,"clone","","",7,[[],["duration",3]]],[11,"sum","","",7,[[],["duration",3]]],[11,"sum","","",7,[[],["duration",3]]],[11,"default","","",7,[[],["duration",3]]],[11,"hash","","",7,[[]]],[11,"sub_assign","","",7,[[["duration",3]]]],[11,"eq","","",7,[[["duration",3]],["bool",15]]],[11,"ne","","",7,[[["duration",3]],["bool",15]]],[11,"partial_cmp","","",7,[[["duration",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["duration",3]],["bool",15]]],[11,"le","","",7,[[["duration",3]],["bool",15]]],[11,"gt","","",7,[[["duration",3]],["bool",15]]],[11,"ge","","",7,[[["duration",3]],["bool",15]]],[11,"mul_assign","","",7,[[["u32",15]]]],[11,"div","","",7,[[["u32",15]],["duration",3]]],[11,"mul","","",7,[[["u32",15]],["duration",3]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","",7,[[["duration",3]],["duration",3]]],[11,"fmt","xng_rs::prelude","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","","",6,[[],["cstr",3]]],[11,"partial_cmp","","",6,[[["cstr",3]],[["ordering",4],["option",4]]]],[11,"to_owned","","",6,[[],["cstring",3]]],[11,"hash","","",6,[[]]],[11,"cmp","","",6,[[["cstr",3]],["ordering",4]]],[11,"eq","","",6,[[["cstr",3]],["bool",15]]],[11,"from","xng_rs","",3,[[["timeerror",4]]]],[11,"from","","",3,[[["xngerrortrace",3]]]],[11,"fmt","xng_rs::port","",0,[[["formatter",3]],["result",6]]],[11,"fmt","xng_rs::time","",1,[[["formatter",3]],["result",6]]],[11,"fmt","xng_rs","",3,[[["formatter",3]],["result",6]]],[11,"from_ptr","xng_rs::prelude","Wraps a raw C string with a safe C string wrapper.",6,[[],["cstr",3]]],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",6,[[],[["cstr",3],["result",4],["frombyteswithnulerror",3]]]],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",6,[[],["cstr",3]]],[11,"as_ptr","","Returns the inner pointer to this C string.",6,[[]]],[11,"to_bytes","","Converts this C string to a byte slice.",6,[[]]],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the …",6,[[]]],[11,"to_str","","Yields a [<code>&str</code>] slice if the <code>CStr</code> contains valid UTF-8.",6,[[],[["utf8error",3],["result",4],["str",15]]]],[11,"to_string_lossy","","Converts a <code>CStr</code> into a [<code>Cow</code>]<code><</code>[<code>str</code>]<code>></code>.",6,[[],[["cow",4],["str",15]]]],[11,"into_c_string","","Converts a [<code>Box</code>]<code><CStr></code> into a <code>CString</code> without copying or …",6,[[["box",3],["cstr",3],["global",3]],["cstring",3]]],[18,"SECOND","xng_rs::time","The duration of one second.",7,null],[18,"MILLISECOND","","The duration of one millisecond.",7,null],[18,"MICROSECOND","","The duration of one microsecond.",7,null],[18,"NANOSECOND","","The duration of one nanosecond.",7,null],[18,"ZERO","","A duration of zero time.",7,null],[18,"MAX","","The maximum duration.",7,null],[11,"new","","Creates a new <code>Duration</code> from the specified number of whole …",7,[[["u32",15],["u64",15]],["duration",3]]],[11,"from_secs","","Creates a new <code>Duration</code> from the specified number of whole …",7,[[["u64",15]],["duration",3]]],[11,"from_millis","","Creates a new <code>Duration</code> from the specified number of …",7,[[["u64",15]],["duration",3]]],[11,"from_micros","","Creates a new <code>Duration</code> from the specified number of …",7,[[["u64",15]],["duration",3]]],[11,"from_nanos","","Creates a new <code>Duration</code> from the specified number of …",7,[[["u64",15]],["duration",3]]],[11,"is_zero","","Returns true if this <code>Duration</code> spans no time.",7,[[],["bool",15]]],[11,"as_secs","","Returns the number of <em>whole</em> seconds contained by this …",7,[[],["u64",15]]],[11,"subsec_millis","","Returns the fractional part of this <code>Duration</code>, in whole …",7,[[],["u32",15]]],[11,"subsec_micros","","Returns the fractional part of this <code>Duration</code>, in whole …",7,[[],["u32",15]]],[11,"subsec_nanos","","Returns the fractional part of this <code>Duration</code>, in …",7,[[],["u32",15]]],[11,"as_millis","","Returns the total number of whole milliseconds contained …",7,[[],["u128",15]]],[11,"as_micros","","Returns the total number of whole microseconds contained …",7,[[],["u128",15]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this …",7,[[],["u128",15]]],[11,"checked_add","","Checked <code>Duration</code> addition. Computes <code>self + other</code>, …",7,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_add","","Saturating <code>Duration</code> addition. Computes <code>self + other</code>, …",7,[[["duration",3]],["duration",3]]],[11,"checked_sub","","Checked <code>Duration</code> subtraction. Computes <code>self - other</code>, …",7,[[["duration",3]],[["duration",3],["option",4]]]],[11,"saturating_sub","","Saturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …",7,[[["duration",3]],["duration",3]]],[11,"checked_mul","","Checked <code>Duration</code> multiplication. Computes <code>self * other</code>, …",7,[[["u32",15]],[["duration",3],["option",4]]]],[11,"saturating_mul","","Saturating <code>Duration</code> multiplication. Computes <code>self * other</code>…",7,[[["u32",15]],["duration",3]]],[11,"checked_div","","Checked <code>Duration</code> division. Computes <code>self / other</code>, …",7,[[["u32",15]],[["duration",3],["option",4]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this <code>Duration</code> …",7,[[],["f64",15]]],[11,"as_secs_f32","","Returns the number of seconds contained by this <code>Duration</code> …",7,[[],["f32",15]]],[11,"from_secs_f64","","Creates a new <code>Duration</code> from the specified number of …",7,[[["f64",15]],["duration",3]]],[11,"from_secs_f32","","Creates a new <code>Duration</code> from the specified number of …",7,[[["f32",15]],["duration",3]]],[11,"mul_f64","","Multiplies <code>Duration</code> by <code>f64</code>.",7,[[["f64",15]],["duration",3]]],[11,"mul_f32","","Multiplies <code>Duration</code> by <code>f32</code>.",7,[[["f32",15]],["duration",3]]],[11,"div_f64","","Divide <code>Duration</code> by <code>f64</code>.",7,[[["f64",15]],["duration",3]]],[11,"div_f32","","Divide <code>Duration</code> by <code>f32</code>.",7,[[["f32",15]],["duration",3]]],[11,"div_duration_f64","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.",7,[[["duration",3]],["f64",15]]],[11,"div_duration_f32","","Divide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.",7,[[["duration",3]],["f32",15]]],[11,"new","xng_rs::port","Creates a communication port operating in sampling mode",8,[[["duration",3],["into",8],["cstr",3]],[["xngerror",4],["result",4]]]],[11,"recv","","Receives a message",8,[[],[["option",4],["xngerror",4],["result",4]]]],[11,"id","","Get the id of this sampling port",8,[[],["samplingportid",6]]],[11,"status","","Get status of the port",8,[[],[["xngerror",4],["result",4],["samplingportstatus",3]]]],[11,"new","","Creates a communication port operating in sampling mode",9,[[["cstr",3]],[["xngerror",4],["result",4]]]],[11,"send","","Send a message",9,[[],[["result",4],["xngerror",4]]]],[11,"id","","Get the id of this sampling port",9,[[],["samplingportid",6]]],[11,"status","","Get status of the port",9,[[],[["xngerror",4],["result",4],["samplingportstatus",3]]]]],"p":[[3,"SamplingPortStatus"],[4,"TimeError"],[8,"DurationFromInt"],[4,"XngError"],[13,"BufTooBig"],[13,"BufTooSmall"],[3,"CStr"],[3,"Duration"],[3,"SamplingReceiver"],[3,"SamplingSender"],[3,"XngErrorTrace"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);